{"mappings":"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","sources":["Models.js"],"sourcesContent":["'use strict';\n\nvar Model = function (gl, vertices, indices, normals, color) {\n\tthis.vbo = gl.createBuffer();\n\tthis.ibo = gl.createBuffer();\n\tthis.nbo = gl.createBuffer();\n\tthis.nPoints = indices.length;\n\n\tthis.world = mat4.create();\n\tthis.color = color;\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\n\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, this.nbo);\n\tgl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\n\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.ibo);\n\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n};\n\nvar CreateShaderProgram = function (gl, vsText, fsText) {\n\tvar vs = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vs, vsText);\n\tgl.compileShader(vs);\n\tif (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n\t\treturn {\n\t\t\terror: 'Error compiling vertex shader: ' + gl.getShaderInfoLog(vs)\n\t\t};\n\t}\n\n\tvar fs = gl.createShader(gl.FRAGMENT_SHADER);\n\tgl.shaderSource(fs, fsText);\n\tgl.compileShader(fs);\n\tif (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n\t\treturn {\n\t\t\terror: 'Error compiling fragment shader: ' + gl.getShaderInfoLog(fs)\n\t\t};\n\t}\n\n\tvar program = gl.createProgram();\n\tgl.attachShader(program, vs);\n\tgl.attachShader(program, fs);\n\tgl.linkProgram(program);\n\tif (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\treturn {\n\t\t\terror: 'Error linking program: ' + gl.getProgramInfoLog(program)\n\t\t};\n\t}\n\n\tgl.validateProgram(program);\n\tif (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n\t\treturn {\n\t\t\terror: 'Error validating program: ' + gl.getProgramInfoLog(program)\n\t\t};\n\t}\n\n\treturn program;\n\n};\n\nvar Camera = function (position, lookAt, up) {\n\tthis.forward = vec3.create();\n\tthis.up = vec3.create();\n\tthis.right = vec3.create();\n\n\tthis.position = position;\n\n\tvec3.subtract(this.forward, lookAt, this.position);\n\tvec3.cross(this.right, this.forward, up);\n\tvec3.cross(this.up, this.right, this.forward);\n\n\tvec3.normalize(this.forward, this.forward);\n\tvec3.normalize(this.right, this.right);\n\tvec3.normalize(this.up, this.up);\n};\n\nCamera.prototype.GetViewMatrix = function (out) {\n\tvar lookAt = vec3.create();\n\tvec3.add(lookAt, this.position, this.forward);\n\tmat4.lookAt(out, this.position, lookAt, this.up);\n\treturn out;\n};\n\nCamera.prototype.rotateRight = function (rad) {\n\tvar rightMatrix = mat4.create();\n\tmat4.rotate(rightMatrix, rightMatrix, rad, vec3.fromValues(0, 0, 1));\n\tvec3.transformMat4(this.forward, this.forward, rightMatrix);\n\tthis._realign();\n};\n\nCamera.prototype._realign = function() {\n\tvec3.cross(this.right, this.forward, this.up);\n\tvec3.cross(this.up, this.right, this.forward);\n\n\tvec3.normalize(this.forward, this.forward);\n\tvec3.normalize(this.right, this.right);\n\tvec3.normalize(this.up, this.up);\n};\n\nCamera.prototype.moveForward = function (dist) {\n\tvec3.scaleAndAdd(this.position, this.position, this.forward, dist);\n};\n\nCamera.prototype.moveRight = function (dist) {\n\tvec3.scaleAndAdd(this.position, this.position, this.right, dist);\n};\n\nCamera.prototype.moveUp = function (dist) {\n\tvec3.scaleAndAdd(this.position, this.position, this.up, dist);\n};"],"names":["Model","gl","vertices","indices","normals","color","this","vbo","createBuffer","ibo","nbo","nPoints","length","world","mat4","create","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","CreateShaderProgram","vsText","fsText","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","fs","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","validateProgram","VALIDATE_STATUS","getProgramInfoLog","Camera","position","lookAt","up","forward","vec3","right","subtract","cross","normalize","prototype","GetViewMatrix","out","add","rotateRight","rad","rightMatrix","rotate","fromValues","transformMat4","_realign","moveForward","dist","scaleAndAdd","moveRight","moveUp"],"version":3,"file":"index.f866ab9c.js.map"}